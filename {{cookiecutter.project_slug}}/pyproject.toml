[project]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_name }}"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
dependencies = [
    "transformers>=4.36.0",
    "datasets>=2.16.0",
    "accelerate>=0.25.0",
    "torch>=2.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "pyyaml>=6.0",
    "litserve>=0.1.0",
    "scikit-learn>=1.3.0",
    "polars>=0.20.0",
    "taskipy>=1.12.0",
    "tensorboard>=2.15.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501"]  # line too long

[tool.ruff.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.taskipy.tasks]
lint = "ruff check src tests"
format = "ruff format src tests"
typecheck = "mypy src"
test = "pytest tests"
train-local = "accelerate launch src/models/train_model.py"
train-cloud = "sky launch sky_task.yaml"
serve = "python -m src.deployment.serve"