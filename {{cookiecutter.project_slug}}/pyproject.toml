[project]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_name }}"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"

dependencies = [
    # Core ML and data processing
    "torch>=2.1.0",
    "transformers>=4.36.0",
    "datasets>=2.16.0",
    "accelerate>=0.25.0",
    "scikit-learn>=1.3.0",
    "polars>=0.20.0",
    
    # Configuration and serving
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "pyyaml>=6.0",
    "litserve>=0.1.0",
    "taskipy>=1.12.0",
    
    {% if cookiecutter.use_tracelet == "yes" -%}
    # Experiment tracking
    "tracelet>=0.1.0",
    {% endif -%}
    
    {% if cookiecutter.modality == "speech" -%}
    # Speech processing
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "torchaudio>=2.1.0",
    {% endif -%}
    
    {% if cookiecutter.modality == "vision" -%}
    # Vision processing
    "torchvision>=0.16.0", 
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    {% endif -%}
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    {% if cookiecutter.include_notebooks == "yes" -%}
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    {% endif -%}
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "F401",  # unused imports (for optional dependencies)
]

[tool.ruff.isort]
known-first-party = ["{{ cookiecutter.package_name }}"]

[tool.taskipy.tasks]
lint = "ruff check {{ cookiecutter.package_name }} tests"
format = "ruff format {{ cookiecutter.package_name }} tests"
test = "pytest tests"
train = "accelerate launch {{ cookiecutter.package_name }}/models/train_model.py"
serve = "python -m {{ cookiecutter.package_name }}.deployment.serve"
{% if cookiecutter.cloud_provider != "none" -%}
train-cloud = "sky launch sky_task.yaml"
{% endif %}